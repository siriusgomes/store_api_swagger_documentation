swagger: '2.0'
info:
  version: 1.0.0
  title: Store API on Heroku for CS497 - Enterprise Web Development
  description: >
    **This is the documentation for the "Store API" project. **

    It was created and hosted on Heroku by SÃ­rius Gomes



    Find source code of this API [here](https://github.com/siriusgomes/siriusgomes-cs497-fall-2015)
host: siriusgomes-cs497-api.herokuapp.com
#host: localhost:3000
basePath: /
schemes:
#  - http
  - https
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  '/':
    get:
      responses:
        '200':
          description: Shows the hello world page


  '/products':
    get:
      tags:
        - product
      summary: List all products for the user of the token
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
      responses:
        '200':
          description: List of products for the user of the token
          schema:
            type: array
            $ref: '#/definitions/Product'
    post:
      tags:
        - product
      summary: Add a new product
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
        - in: body
          name: product
          description: Product object that will be added
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: Created product.


  '/products/{product_id}':
    get:
      tags:
        - product
      summary: Shows the product according to the product_id
      parameters:
        - in: path
          name: product_id
          description: Product Id
          required: true
          type: integer
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true

      responses:
        '200':
          description: Product with specified id for the user of the token
          schema:
            $ref: '#/definitions/Product'
    put:
      tags:
        - product
      summary: Update an existing product
      parameters:
        - in: path
          name: product_id
          description: Product Id
          required: true
          type: integer
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
        - in: body
          name: product
          description: Product information that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: Updated product
          schema:
            $ref: '#/definitions/Product'
  '/orders':
    get:
      tags:
        - order
      summary: List all orders for the user of the token
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
      responses:
        '200':
          description: List of orders for the user of the token
          schema:
            $ref: '#/definitions/Order'
    post:
      tags:
        - order
      summary: Add a new order
      parameters:
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
        - in: body
          name: order
          description: Order object that will be added
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '201':
          description: Created order.
          schema:
            $ref: '#/definitions/Order'
  '/orders/{order_id}':
    get:
      tags:
        - order
      summary: Shows the order according to the order_id
      parameters:
        - in: path
          name: order_id
          description: Order Id
          required: true
          type: integer
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true

      responses:
        '200':
          description: Order with specified id for the user of the token
          schema:
            $ref: '#/definitions/Order'
  '/reports/total_orders/{from}/{to}':
    get:
      tags:
        - report
      parameters:
        - in: path
          name: from
          description: Date from in format yyyy-mm-dd
          required: true
          type: string
        - in: path
          name: to
          description: Date from in format yyyy-mm-dd
          required: true
          type: string
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
      responses:
        '200':
          description: Total sold in value for the user of the token in the period specified.
  '/reports/total_sold_product/{product_id}':
    get:
      tags:
        - report
      parameters:
        - in: path
          name: product_id
          description: Product Id
          required: true
          type: integer
        - name: Authorization
          in: header
          type: string
          description: Authorization Token
          required: true
      responses:
        '200':
          description: Total sold in value and quantity for the product specified.
definitions:
  Product:
    type: object
    properties:
      name:
        type: string
        description: Name of the product.
      category:
        type: string
        description: Category of the product.
      price:
        type: number
        format: float
        description: Price of the product.
      stock:
        type: integer
        description: Quantity in stock.
  Order:
    type: object
    properties:
      #total_price:
      #  type: number
      #  format: float
      #  description: Total price of the order.
      user_id:
        type: integer
        description: User that made the order.
      products_list:
        type: array
        items:
          $ref: '#/definitions/ProductOrder'
  ProductOrder:
    type: object
    properties:
      #order_id:
      #  type: object
      #  items:
      #  $ref: '#/definitions/Order'
      product_id:
        type: integer
        description: Product Id
      quantity:
        type: integer
        description: Quantity purchased.
